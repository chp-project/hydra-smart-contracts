format_version: 3
pipelines:
  smart-contracts: # definition of mypipe1 pipeline
    group: hydra # note that the group name can contain only of alphanumeric & underscore characters
    label_template: "${gitrepo[:8]}"
    lock_behavior: none
    parameters: # list of parameters that can be configured for a pipeline
      env: hydra
    materials:
      gitrepo: # this is the name of material, the name can contain only of alphanumeric & underscore characters
        # keyword git says about type of material and url at once
        git: https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/hydra-smart-contracts.git
        branch: master
    stages: # list of stages in order
      - faucet: # Responsible for running Cypress to submit address[0] to receive ETH from Ropsten Faucet
          clean_workspace: true
          jobs:
            subscribe: # Job: subscribe
              environment_variables:
                ETH_ENVIRONMENT: ROPSTEN
              tasks: # ordered list of tasks to execute in job "faucet"
               - exec: # Install Cypress and other NPM packages
                   command: npm
                   arguments:
                    - install
               - exec: # Run Cypress -> printEth.spec.js
                   command: npm
                   arguments:
                    - run
                    - test:cypress
      - unit-test: # Run unit tests using Truffle Test
          clean_workspace: false
          jobs:
            run-tests: # Job: run-tests
              tasks: # ordered list of tasks to execute in job "run-tests"
               - script: ./truffle-test.sh
      - compile: # Truffle Compile Stage
          clean_workspace: true
          jobs:
            truffle: # Job: truffle
              artifacts:
                - build:
                    source: build/**/*
                    destination: dist
              tasks: # ordered list of tasks to execute in job "truffle"
               - exec: # indicates type of task
                   command: npm
                   arguments:
                    - install
               - exec: # indicates type of task
                   command: npm
                   arguments:
                    - run
                    - compile
               - exec: # indicates type of task
                   command: node
                   arguments:
                    - environment.js
              
environments:
  hydra:
    pipelines:
      - smart-contracts