format_version: 3
pipelines:
  smart-contracts: # definition of mypipe1 pipeline
    group: hydra # note that the group name can contain only of alphanumeric & underscore characters
    label_template: "${gitrepo[:8]}"
    lock_behavior: none
    parameters: # list of parameters that can be configured for a pipeline
      env: hydra
    materials:
      gitrepo: # this is the name of material, the name can contain only of alphanumeric & underscore characters
        # keyword git says about type of material and url at once
        git: https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/hydra-smart-contracts.git
        branch: master
    stages: # list of stages in order
      - faucet: # Stage: (faucet) Responsible for running Cypress to submit address[0] to receive ETH from Ropsten Faucet
          clean_workspace: true
          jobs:
            refill: # Job: refill
              environment_variables:
                ETH_ENVIRONMENT: ROPSTEN
              tasks: # ordered list of tasks to execute in job "faucet"
               - exec: # Install Cypress and other NPM packages
                   command: npm
                   arguments:
                    - install
                    - --silent
                    - --quiet
               - exec: # Run Cypress -> printEth.spec.js
                   command: npm
                   arguments:
                    - run
                    - test:cypress
      - unit-test: # Stage: (unit-test) Run unit tests using Truffle Test
          clean_workspace: true
          environment_variables:
            ETH_ENVIRONMENT: GANACHE
          jobs:
            run-tests: # Job: run-tests
              tasks: # ordered list of tasks to execute in job "run-tests"
               - exec: # Install Cypress and other NPM packages
                   command: npm
                   arguments:
                    - install
                    - --silent
                    - --quiet
               - script: ./scripts/truffle-test.sh
      - deploy-ropsten: # Stage: (deploy-ropsten) Deploy contracts to Ropsten testnet
          approval: manual
          clean_workspace: true
          environment_variables:
            ETH_ENVIRONMENT: ROPSTEN
          jobs:
            truffle: # Job: truffle
              timeout: 8
              artifacts:
                - build:
                    source: build/**/*
                    destination: dist
                - build:
                    source: e2e-testing/artifacts/**/*
                    destination: contract-addresses
              tasks: # ordered list of tasks to execute in job "truffle"
               - exec: # indicates type of task
                   command: npm
                   arguments:
                    - install
                    - --silent
                    - --quiet
               - exec: # indicates type of task
                   command: npm
                   arguments:
                    - run
                    - deploy:ropsten
               - script: | # Push Ropsten deployment artifacts to "go-hydra-smart-contract-files" repo
                  git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git tmp-git
                  cp ./build/contracts/TierionNetworkToken.json tmp-git/
                  cp ./build/contracts/ChainpointRegistry.json tmp-git/
                  cd ./tmp-git
                  git add .
                  git commit -m "Pushing Ropsten Deployment Artififacts From GOCD (Hydra Smart Contracts) - Revision - $(echo $GO_PIPELINE_LABEL)"
                  git push https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git --force -u master
      - e2etest-nodes-ropsten: # Stage: (e2etest-nodes-ropsten) Run E2E Test-suite for Nodes on Ropsten testnet
          clean_workspace: true
          environment_variables:
            ETH_ENVIRONMENT: ROPSTEN
          jobs:
            hydra-testsuite: # Job: hydra-testsuite
              tasks: # ordered list of tasks to execute in job "truffle"
               - fetch:
                   pipeline: smart-contracts
                   stage: deploy-ropsten
                   job: truffle
                   source: contract-addresses/
                   destination: contract-addresses/
               - exec: # indicates type of task
                   command: npm
                   arguments:
                    - install
                    - --silent
                    - --quiet
               - exec: # indicates type of task
                   command: npm
                   arguments:
                    - run
                    - test:e2e:nodes
      - e2etest-cores-ropsten: # Stage: (e2etest-cores-ropsten) Run E2E Test-suite for Cores on Ropsten testnet
          clean_workspace: false
          environment_variables:
            ETH_ENVIRONMENT: ROPSTEN
          jobs:
            hydra-testsuite: # Job: hydra-testsuite
              tasks: # ordered list of tasks to execute in job "hydra-testsuite"
               - fetch:
                   pipeline: smart-contracts
                   stage: deploy-ropsten
                   job: truffle
                   source: contract-addresses/
                   destination: contract-addresses/
               - exec: # indicates type of task
                   command: npm
                   arguments:
                    - run
                    - test:e2e:cores
      - go-contract-compilation: # Stage: (go-contract-compilation) Generate Golang contract files to interact with Smart Contracts
          clean_workspace: true
          environment_variables:
            ETH_ENVIRONMENT: GOLANG
          jobs:
            compile-token-contract: # Job: compile-token-contract
              tasks: # ordered list of tasks to execute in job "compile-token-contract"
               - exec: # Install NPM packages
                   command: npm
                   arguments:
                    - install
                    - --silent
                    - --quiet
               - exec: # Truffle Compile
                   command: npm
                   arguments:
                    - run
                    - compile
               - exec: 
                   command: node 
                   arguments:
                    - ./scripts/extractABI.js
                    - --file
                    - TierionNetworkToken
               - script: | # Generate ABI for Token Contract & Go contract file
                  node ./scripts/extractABI.js --file TierionNetworkToken
                  abigen --abi=./build/contracts/TierionNetworkToken.abi --pkg=ethcontracts --type=TNT --out=./build/contracts/TierionNetworkToken.go
               - exec: 
                   command: cat 
                   arguments:
                    - ./build/contracts/TierionNetworkToken.go
               - script: | # Generate ABI for Chainpoint Registry Contract & Go contract file
                  node ./scripts/extractABI.js --file ChainpointRegistry
                  abigen --abi=./build/contracts/ChainpointRegistry.abi --pkg=ethcontracts --type=ChpRegistry --out=./build/contracts/ChainpointRegistry.go
               - exec: 
                   command: cat 
                   arguments:
                    - ./build/contracts/ChainpointRegistry.go
               - script: | # Git Push
                  git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git tmp-git
                  cp ./build/contracts/TierionNetworkToken.go tmp-git/
                  cp ./build/contracts/ChainpointRegistry.go tmp-git/
                  cd ./tmp-git
                  git add .
                  git commit -m "Pushing From GOCD (Hydra Smart Contracts) - Revision - $(echo $GO_PIPELINE_LABEL)"
                  git push https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git --force -u master
               - script: | # Push to GCP Storage
                  export BOTO_CONFIG=/dev/null
                  gsutil cp ./build/contracts/TierionNetworkToken.go gs://go-hydra-contract-files
                  gsutil cp ./build/contracts/ChainpointRegistry.go gs://go-hydra-contract-files
  smart-contract-audits:
    group: hydra # note that the group name can contain only of alphanumeric & underscore characters
    label_template: "audit ${gitrepo[:8]}"
    lock_behavior: none
    parameters: # list of parameters that can be configured for a pipeline
      env: hydra
    materials:
      gitrepo: # this is the name of material, the name can contain only of alphanumeric & underscore characters
        # keyword git says about type of material and url at once
        git: https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/hydra-smart-contracts.git
        branch: master
    stages: # list of stages in order
      - slither:
          clean_workspace: true
          jobs:
            slither-audit: # Job: slither-audit
              environment_variables:
                ETH_ENVIRONMENT: AUDIT
              tasks: # ordered list of tasks to execute in job "slither-audit"
               - exec: # Install NPM packages
                   command: npm
                   arguments:
                    - install
                    - --silent
                    - --quiet
               - exec: # Truffle Compile
                   command: npm
                   arguments:
                    - run
                    - compile
               - script: docker-compose run chp-slither /share/scripts/slither-audit.sh
               - script: cat slither-output.json
environments:
  hydra:
    pipelines:
      - smart-contracts
      - smart-contract-audits
