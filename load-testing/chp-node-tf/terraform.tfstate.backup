{
    "version": 3,
    "terraform_version": "0.11.11",
    "serial": 58,
    "lineage": "b520c683-f9f6-8e7d-7c17-60a74de509a5",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.init": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3308e2bc5e5d2da08a8928a5d3d9a27cff4df1d58d616782254530630515991d",
                        "attributes": {
                            "id": "3308e2bc5e5d2da08a8928a5d3d9a27cff4df1d58d616782254530630515991d",
                            "rendered": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "template": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "google_compute_firewall.web-sg": {
                    "type": "google_compute_firewall",
                    "depends_on": [],
                    "primary": {
                        "id": "web-sg",
                        "attributes": {
                            "allow.#": "2",
                            "allow.1100366991.ports.#": "3",
                            "allow.1100366991.ports.0": "80",
                            "allow.1100366991.ports.1": "443",
                            "allow.1100366991.ports.2": "8080",
                            "allow.1100366991.protocol": "tcp",
                            "allow.1367131964.ports.#": "0",
                            "allow.1367131964.protocol": "icmp",
                            "creation_timestamp": "2019-04-26T11:12:25.324-07:00",
                            "deny.#": "0",
                            "description": "",
                            "destination_ranges.#": "0",
                            "direction": "INGRESS",
                            "disabled": "false",
                            "id": "web-sg",
                            "name": "web-sg",
                            "network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "priority": "1000",
                            "project": "tierion-iglesias",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/firewalls/web-sg",
                            "source_ranges.#": "1",
                            "source_ranges.1080289494": "0.0.0.0/0",
                            "source_service_accounts.#": "0",
                            "source_tags.#": "0",
                            "target_service_accounts.#": "0",
                            "target_tags.#": "0"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 240000000000,
                                "delete": 240000000000,
                                "update": 240000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.0": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-0",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-0",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-0",
                            "instance_id": "8239133051409331387",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-0",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.239.157.140",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.40",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-0",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.1": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-1",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-1",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-1",
                            "instance_id": "1244529547151340730",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-1",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.225.156.59",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.43",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-1",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.10": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-10",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-10",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-10",
                            "instance_id": "5151177378062333156",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-10",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.226.207.59",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.37",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-10",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.11": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-11",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-11",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-11",
                            "instance_id": "3382834162845021413",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-11",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.226.135.99",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.31",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-11",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.12": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-12",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-12",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-12",
                            "instance_id": "3324084610873095397",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-12",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "104.154.45.126",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.36",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-12",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.13": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-13",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-13",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-13",
                            "instance_id": "5996823354511652027",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-13",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.193.142.52",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.41",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-13",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.14": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-14",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-14",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-14",
                            "instance_id": "2566656931971134693",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-14",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.188.182.100",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.33",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-14",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.2": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-2",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-2",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-2",
                            "instance_id": "2366552829397497076",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-2",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.222.70.178",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.38",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-2",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.3": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-3",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-3",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-3",
                            "instance_id": "2382846560928986298",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-3",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.225.193.211",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.42",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-3",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.4": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-4",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-4",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-4",
                            "instance_id": "5953713483566478564",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-4",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.194.8.65",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.32",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-4",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.5": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-5",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-5",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-5",
                            "instance_id": "5988359189446980836",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-5",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.225.246.237",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.30",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-5",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.6": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-6",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-6",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-6",
                            "instance_id": "523912907661964452",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-6",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "104.197.170.232",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.39",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-6",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.7": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-7",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-7",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-7",
                            "instance_id": "2844145182598690021",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-7",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.194.34.77",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.34",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-7",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.8": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-8",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-8",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-8",
                            "instance_id": "7934503880236135653",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-8",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.238.42.55",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.35",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-8",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.9": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-9",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-9",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-9",
                            "instance_id": "3356445445691733221",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "4vtk0LRMtkk=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-9",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.238.138.206",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.29",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-9",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                }
            },
            "depends_on": []
        }
    ]
}
