{
    "version": 3,
    "terraform_version": "0.11.11",
    "serial": 12,
    "lineage": "b520c683-f9f6-8e7d-7c17-60a74de509a5",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.init": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "dba7fabe0d60b688a9cdf85f41da0af521903b714a776c74deb50d6a0bee7703",
                        "attributes": {
                            "id": "dba7fabe0d60b688a9cdf85f41da0af521903b714a776c74deb50d6a0bee7703",
                            "rendered": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ngit clone https://github.com/chainpoint/chainpoint-node-src.git \u0026\u0026 cd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e /eip.txt\n\nmake init\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003c/eth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003c/eip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720",
                            "template": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ngit clone https://github.com/chainpoint/chainpoint-node-src.git \u0026\u0026 cd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e /eip.txt\n\nmake init\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003c/eth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003c/eip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "google_compute_instance.chp-node": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-0",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190404",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-0",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-0",
                            "instance_id": "6765036194503992821",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "DmpnQinV30k=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\ngit clone https://github.com/chainpoint/chainpoint-node-src.git \u0026\u0026 cd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e /eip.txt\n\nmake init\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003c/eth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003c/eip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720",
                            "min_cpu_platform": "",
                            "name": "chp-node-0",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.202.95.30",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.7",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "1",
                            "scratch_disk.0.interface": "SCSI",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-0",
                            "service_account.#": "0",
                            "tags.#": "2",
                            "tags.2146908089": "chainpoint",
                            "tags.288689601": "hydra",
                            "tags_fingerprint": "poMKla_otKs=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                }
            },
            "depends_on": []
        }
    ]
}
