{
    "version": 3,
    "terraform_version": "0.11.11",
    "serial": 3,
    "lineage": "ceca5507-8376-89ad-dfc6-4ffe9247e323",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.init": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "42721ab87743430acf41a67e47ec4c16dc94188558022a99ece82ece0a757e47",
                        "attributes": {
                            "id": "42721ab87743430acf41a67e47ec4c16dc94188558022a99ece82ece0a757e47",
                            "rendered": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "template": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "google_compute_firewall.web-sg": {
                    "type": "google_compute_firewall",
                    "depends_on": [],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.0": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.1": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-1",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-1",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-1",
                            "instance_id": "6109818966223770788",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-1",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.66.125.145",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.222",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-1",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.10": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-10",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-10",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-10",
                            "instance_id": "8889457779412456714",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-10",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.224.219.30",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.107",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-10",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.11": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.12": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.13": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.14": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-14",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-14",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-14",
                            "instance_id": "813336039202902201",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-14",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.184.209.121",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.218",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-14",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.15": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.16": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-16",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-16",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-16",
                            "instance_id": "133236557815894853",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-16",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.226.58.136",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.184",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-16",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.17": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-17",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-17",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-17",
                            "instance_id": "3674050971513017531",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-17",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.225.52.216",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.225",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-17",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.18": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-18",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-18",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-18",
                            "instance_id": "3940094701959796189",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-18",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.222.218.169",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.71",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-18",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.19": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-19",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-19",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-19",
                            "instance_id": "713688047701873537",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-19",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.225.27.114",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.171",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-19",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.2": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.20": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-20",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-20",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-20",
                            "instance_id": "5358448977915565304",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-20",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.66.239.117",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.216",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-20",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.21": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-21",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-21",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-21",
                            "instance_id": "2870505668953395395",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-21",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "104.154.76.36",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.209",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-21",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.22": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.23": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-23",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-23",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-23",
                            "instance_id": "5936171540070945867",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-23",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.193.23.27",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.237",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-23",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.24": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.25": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.26": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-26",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-26",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-26",
                            "instance_id": "2176180087650931223",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-26",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.222.74.153",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.153",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-26",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.27": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-27",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-27",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-27",
                            "instance_id": "9001524617310262377",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-27",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.224.209.219",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.234",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-27",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.28": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.29": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.3": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-3",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-3",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-3",
                            "instance_id": "958553655189328684",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-3",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.67.214.138",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.190",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-3",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.30": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-30",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-30",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-30",
                            "instance_id": "3979923411164353553",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-30",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.193.150.118",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.65",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-30",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.31": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.32": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-32",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-32",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-32",
                            "instance_id": "60327039834936117",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-32",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.192.208.31",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.192",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-32",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.33": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.34": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.35": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-35",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-35",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-35",
                            "instance_id": "2007477904022590483",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-35",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.239.234.83",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.250",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-35",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.36": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-36",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-36",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-36",
                            "instance_id": "4291617545841431800",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-36",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.66.76.65",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.214",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-36",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.37": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-37",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-37",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-37",
                            "instance_id": "8857709136347288682",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-37",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.239.205.154",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.230",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-37",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.38": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.39": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.4": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-4",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-4",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-4",
                            "instance_id": "2586562563516289243",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-4",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.68.75.93",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.212",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-4",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.40": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-40",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-40",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-40",
                            "instance_id": "6600634059145500117",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-40",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.67.67.175",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.76",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-40",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.41": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.42": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.43": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.44": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.45": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-45",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-45",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-45",
                            "instance_id": "5694682738950820462",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-45",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.225.84.182",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.131",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-45",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.46": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-46",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-46",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-46",
                            "instance_id": "8371543697710797839",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-46",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.238.49.234",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.249",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-46",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.47": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-47",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-47",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-47",
                            "instance_id": "288820743091148148",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-47",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.184.15.30",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.91",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-47",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.48": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.49": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-49",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-49",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-49",
                            "instance_id": "737999993548723400",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-49",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.188.133.141",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.218",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-49",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.5": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-5",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-5",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-5",
                            "instance_id": "481465741602083801",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-5",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.193.151.49",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.166",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-5",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.50": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-50",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-50",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-50",
                            "instance_id": "6362984271593231465",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-50",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.67.35.46",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.232",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-50",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.51": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-51",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-51",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-51",
                            "instance_id": "3605238109303100811",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-51",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.68.140.45",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.80",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-51",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.52": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.53": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-53",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-53",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-53",
                            "instance_id": "6354388938227340402",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-53",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.222.205.57",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.236",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-53",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.54": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.55": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-55",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-55",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-55",
                            "instance_id": "4087722048002348422",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-55",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.232.208.206",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.82",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-55",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.56": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.57": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.58": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-58",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-58",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-58",
                            "instance_id": "7116036117554942199",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-58",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.226.224.185",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.207",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-58",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.59": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.6": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-6",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-6",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-6",
                            "instance_id": "1251299373408998363",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-6",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.225.245.92",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.165",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-6",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.60": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-60",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-60",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-60",
                            "instance_id": "132254908680655978",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-60",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.66.121.217",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.231",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-60",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.61": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-61",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-61",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-61",
                            "instance_id": "3342870918106338676",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-61",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.68.98.190",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.90",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-61",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.62": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.63": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.64": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-64",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-64",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-64",
                            "instance_id": "820856939255059616",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-64",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "104.198.230.60",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.224",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-64",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.65": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-65",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-65",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-65",
                            "instance_id": "6197079052272424305",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-65",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "104.197.102.227",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.92",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-65",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.66": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.67": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-67",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-67",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-67",
                            "instance_id": "7881399186622927668",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-67",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.192.5.182",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.194",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-67",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.68": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.69": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.7": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-7",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-7",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-7",
                            "instance_id": "7951143945066927291",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-7",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "23.236.56.192",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.228",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-7",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.70": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.71": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-71",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-71",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-71",
                            "instance_id": "4646252535910650899",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-71",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.188.171.53",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.64",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-71",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.72": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-72",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-72",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-72",
                            "instance_id": "1334592606188229197",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-72",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.188.173.132",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.139",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-72",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.73": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-73",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-73",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-73",
                            "instance_id": "7161071697216820124",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-73",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.226.152.197",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.178",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-73",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.74": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-74",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-74",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-74",
                            "instance_id": "7086945101468292283",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-74",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.67.95.3",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.15.226",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-74",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.75": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.76": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.77": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-77",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-77",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-77",
                            "instance_id": "3795844510176924979",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-77",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.67.160.122",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.104",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-77",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.78": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.79": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-79",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-79",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-79",
                            "instance_id": "3446006281317798734",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-79",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.238.157.98",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.180",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-79",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.8": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-8",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-8",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-8",
                            "instance_id": "2535492571983401809",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-8",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.184.79.170",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.188",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-8",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.80": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.81": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.82": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-82",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-82",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-82",
                            "instance_id": "8508768753221522223",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-82",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.225.200.99",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.189",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-82",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.83": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.84": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.85": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-85",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-85",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-85",
                            "instance_id": "1800601548556227233",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-85",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.222.12.87",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.124",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-85",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.86": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.87": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.88": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.89": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-89",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-89",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-89",
                            "instance_id": "7075756557043389857",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-89",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.67.121.117",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.78",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-89",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.9": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.90": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-90",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-90",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-90",
                            "instance_id": "5950409927887835810",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-90",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "104.154.52.3",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.122",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-90",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.91": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-91",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-91",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-91",
                            "instance_id": "8489043647763207639",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-91",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.238.98.70",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.73",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-91",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.92": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.93": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-93",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-93",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-93",
                            "instance_id": "3178415138578781541",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-93",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.66.238.245",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.89",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-93",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.94": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-94",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-94",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-94",
                            "instance_id": "4991361383006622516",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-94",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.192.135.129",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.193",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-94",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.95": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-95",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-95",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-95",
                            "instance_id": "5678348042021261845",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-95",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "34.67.144.248",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.155",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-95",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.96": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.97": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.98": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "chp-node-98",
                        "attributes": {
                            "attached_disk.#": "0",
                            "boot_disk.#": "1",
                            "boot_disk.0.auto_delete": "true",
                            "boot_disk.0.device_name": "persistent-disk-0",
                            "boot_disk.0.disk_encryption_key_raw": "",
                            "boot_disk.0.disk_encryption_key_sha256": "",
                            "boot_disk.0.initialize_params.#": "1",
                            "boot_disk.0.initialize_params.0.image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20190628",
                            "boot_disk.0.initialize_params.0.size": "10",
                            "boot_disk.0.initialize_params.0.type": "pd-standard",
                            "boot_disk.0.source": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/disks/chp-node-98",
                            "can_ip_forward": "false",
                            "cpu_platform": "Intel Haswell",
                            "deletion_protection": "false",
                            "guest_accelerator.#": "0",
                            "hostname": "",
                            "id": "chp-node-98",
                            "instance_id": "6118467608723739520",
                            "label_fingerprint": "42WmSpB8rSM=",
                            "labels.%": "0",
                            "machine_type": "n1-standard-1",
                            "metadata.%": "1",
                            "metadata.project": "chainpoint-hydra",
                            "metadata_fingerprint": "EpXsOtCLHos=",
                            "metadata_startup_script": "#!/bin/bash\n\nif [ -x \"$(command -v docker)\" ]; then\n    echo \"Docker already installed\"\nelse\n    echo \"Install docker\"\n    curl -fsSL https://get.docker.com -o get-docker.sh\n    bash get-docker.sh\n    sudo usermod -aG docker $USER\nfi\n\nsudo apt-get -qq install -y docker-compose git make jq nodejs npm openssl build-essential g++\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\nif ! [ -x \"$(command -v yarn)\" ]; then\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n    sudo apt-get update -y \u0026\u0026 sudo apt-get install -y --no-install-recommends yarn\nfi\n\n# Install Stackdriver Agent\ncurl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\nsudo bash install-monitoring-agent.sh\n\ncd /srv\nsudo mkdir chp\n\ncd ./chp\n\nsudo git clone https://github.com/chainpoint/chainpoint-node-src.git\nsudo chmod 775 chainpoint-node-src\ncd ./chainpoint-node-src\ngit checkout -b v2 origin/v2\n\nsudo git clone https://michael-iglesias:faca2c20b50c456892f3b6a601ae457d7a49ff10@github.com/chainpoint/go-hydra-smart-contract-files.git artifacts/ethcontracts\n\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\" -H \"Metadata-Flavor: Google\" \u003e eip.txt\n\nmake init\n\nmake build\n\nmake build-rocksdb\n\necho CHAINPOINT_CORE_CONNECT_IP_LIST=35.245.211.97,35.245.9.90,35.188.238.186 \u003e\u003e .env\n\nmake deploy\n\ncurl -X POST \\\n  https://us-central1-tierion-iglesias.cloudfunctions.net/eth-address-init-stream-processor \\\n  -H 'Content-Type: application/json' \\\n  -H 'Postman-Token: 127b5e92-b8fd-4fd0-b6f9-3a58f9d0c0d9' \\\n  -H 'cache-control: no-cache' \\\n  -d \"{\n\t\\\"ethAddress\\\": \\\"$(\u003ceth-address.txt)\\\"\n}\"\n\n# Start Hydra Utils to poll for a positive $TKN balance before it invokes `make register` on behalf of the Node\nnpm install -g load-testing-node-utils\nexport ETH_INFURA_API_KEY=\"ad8f210998704f9e89a37a4791d4702e\" \u0026\u0026 hydra-chp-node-utils\n\n# make register NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\n\nexport COMPOSE_INTERACTIVE_NO_CLI=1 \u0026\u0026 docker exec `docker ps -q` bash -c \"source cli/scripts/env_secrets_expand.sh \u0026\u0026 node cli/register.js NODE_ETH_REWARDS_ADDRESS=$(\u003ceth-address.txt) NODE_PUBLIC_IP_ADDRESS=$(\u003ceip.txt) AUTO_REFILL_ENABLED=true AUTO_REFILL_AMOUNT=720\"",
                            "min_cpu_platform": "",
                            "name": "chp-node-98",
                            "network_interface.#": "1",
                            "network_interface.0.access_config.#": "1",
                            "network_interface.0.access_config.0.assigned_nat_ip": "",
                            "network_interface.0.access_config.0.nat_ip": "35.238.132.97",
                            "network_interface.0.access_config.0.network_tier": "PREMIUM",
                            "network_interface.0.access_config.0.public_ptr_domain_name": "",
                            "network_interface.0.address": "",
                            "network_interface.0.alias_ip_range.#": "0",
                            "network_interface.0.name": "nic0",
                            "network_interface.0.network": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/global/networks/default",
                            "network_interface.0.network_ip": "10.128.0.174",
                            "network_interface.0.subnetwork": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/regions/us-central1/subnetworks/default",
                            "network_interface.0.subnetwork_project": "tierion-iglesias",
                            "project": "tierion-iglesias",
                            "scheduling.#": "1",
                            "scheduling.0.automatic_restart": "true",
                            "scheduling.0.on_host_maintenance": "MIGRATE",
                            "scheduling.0.preemptible": "false",
                            "scratch_disk.#": "0",
                            "self_link": "https://www.googleapis.com/compute/v1/projects/tierion-iglesias/zones/us-central1-a/instances/chp-node-98",
                            "service_account.#": "1",
                            "service_account.0.email": "791121030057-compute@developer.gserviceaccount.com",
                            "service_account.0.scopes.#": "2",
                            "service_account.0.scopes.1328717722": "https://www.googleapis.com/auth/devstorage.read_write",
                            "service_account.0.scopes.299962681": "https://www.googleapis.com/auth/compute",
                            "tags.#": "2",
                            "tags.2152288274": "web-sg",
                            "tags.2541227442": "http",
                            "tags_fingerprint": "IJDDdaOreBI=",
                            "zone": "us-central1-a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 360000000000,
                                "delete": 360000000000,
                                "update": 360000000000
                            },
                            "schema_version": "6"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                },
                "google_compute_instance.chp-node.99": {
                    "type": "google_compute_instance",
                    "depends_on": [
                        "data.template_file.init"
                    ],
                    "primary": {
                        "id": "",
                        "attributes": {},
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.google"
                }
            },
            "depends_on": []
        }
    ]
}
